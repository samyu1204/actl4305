x = "Breed",
y = "Average Total Claims") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
bysuburb.bar
bysuburb.bar <- ggplot(bysuburb, aes(x = reorder(nb_suburb, average.total.claims),
y = average.total.claims)) +
geom_bar(stat = "identity", fill = "pink") +
coord_flip() +
labs(title = "Total Average Claims by Suburb",
x = "Suburb",
y = "Average Total Claims") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
bysuburb.bar
bysuburb.bar <- ggplot(bysuburb, aes(x = reorder(nb_suburb, average.total.claims),
y = average.total.claims)) +
geom_bar(stat = "identity", fill = "darkorchid1") +
coord_flip() +
labs(title = "Total Average Claims by Suburb",
x = "Suburb",
y = "Average Total Claims") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
bysuburb.bar
mutated_Claims_With_Earned
bysuburb <- mutated_Claims_With_Earned %>%
group_by(nb_suburb) %>%
summarise(average.total.claims = mean(total_claim_amount), number_of_claims)
bysuburb <- mutated_Claims_With_Earned %>%
group_by(nb_suburb) %>%
summarise(average.total.claims = mean(total_claim_amount), number_of_claims = n())
bysuburb.byclaims <- bysuburb %>%
arrange(desc(average.total.claims)) %>%
slice_head(n = 20)
bysuburb.bynumberofclaims <- bysuburb %>%
arrange(desc(number_of_claims)) %>%
slice_head(n = 20)
bysuburb.bynumberofclaims
bysuburb <- mutated_Claims_With_Earned %>%
group_by(nb_suburb) %>%
summarise(average.total.claims = mean(total_claim_amount), number_of_claims = n())
bysuburb.bar <- ggplot(bysuburb, aes(x = reorder(nb_suburb, average.total.claims),
y = average.total.claims)) +
geom_bar(stat = "identity", fill = "darkorchid1") +
coord_flip() +
labs(title = "Total Average Claims by Suburb",
x = "Suburb",
y = "Average Total Claims") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
bysuburb.bar
bysuburb <- mutated_Claims_With_Earned %>%
group_by(nb_suburb) %>%
summarise(average.total.claims = mean(total_claim_amount), number_of_claims = n()) %>%
arrange(desc(nb_suburb)) %>%
slice_head(n = 20)
bysuburb.bar <- ggplot(bysuburb, aes(x = reorder(nb_suburb, average.total.claims),
y = average.total.claims)) +
geom_bar(stat = "identity", fill = "darkorchid1") +
coord_flip() +
labs(title = "Total Average Claims by Suburb",
x = "Suburb",
y = "Average Total Claims") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
bysuburb.bar
bysuburb <- mutated_Claims_With_Earned %>%
group_by(nb_suburb) %>%
summarise(average.total.claims = mean(total_claim_amount), number_of_claims = n()) %>%
arrange(desc(average.total.claims)) %>%
slice_head(n = 20)
bysuburb.bar <- ggplot(bysuburb, aes(x = reorder(nb_suburb, average.total.claims),
y = average.total.claims)) +
geom_bar(stat = "identity", fill = "darkorchid1") +
coord_flip() +
labs(title = "Total Average Claims by Suburb",
x = "Suburb",
y = "Average Total Claims") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
bysuburb.bar
number.of.claims.by.suburb <- mutated_Claims_With_Earned %>%
group_by(nb_suburb) %>%
summarise(number_of_claims = n()) %>%
arrange(desc(number_of_claims)) %>%
slice_head(n = 20)
number.of.claims.by.suburb
bysuburb
number.of.claims.by.suburb <- mutated_Claims_With_Earned %>%
group_by(nb_suburb) %>%
summarise(number_of_claims = n()) %>%
arrange(desc(number_of_claims)) %>%
slice_head(n = 20)
number.of.claims.by.suburb
number.of.claims.by.suburb
number.of.claims.by.suburb <- mutated_Claims_With_Earned %>%
group_by(nb_suburb) %>%
summarise(number_of_claims = n()) %>%
arrange(desc(number_of_claims)) %>%
slice_head(n = 25)
number.of.claims.by.suburb
bysuburb.bar <- ggplot(number.of.claims.by.suburb, aes(x = reorder(nb_suburb, number_of_claims),
y = number_of_claims)) +
geom_bar(stat = "identity", fill = "darkorchid1") +
coord_flip() +
labs(title = "Total Average Claims by Suburb",
x = "Suburb",
y = "Average Total Claims") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
bysuburb.bar
bysuburb <- mutated_Claims_With_Earned %>%
group_by(nb_suburb) %>%
summarise(average.total.claims = mean(total_claim_amount),
number_of_claims = n())
# Create the bar and line chart with dual axes
bysuburb_plot <- ggplot(bysuburb, aes(x = reorder(nb_suburb, average.total.claims))) +
# Bar chart for average total claims
geom_bar(aes(y = average.total.claims), stat = "identity", fill = "darkorchid1") +
# Line chart for number of claims (rescale the number of claims)
geom_line(aes(y = number_of_claims / max(number_of_claims) * max(average.total.claims),
group = 1), color = "steelblue", size = 1) +
# Add points to the line for clarity
geom_point(aes(y = number_of_claims / max(number_of_claims) * max(average.total.claims)),
color = "steelblue", size = 2) +
# Create a secondary y-axis with labels for the number of claims
scale_y_continuous(
name = "Average Total Claims",
sec.axis = sec_axis(~ . * max(bysuburb$number_of_claims) / max(bysuburb$average.total.claims),
name = "Number of Claims")
) +
# Flip coordinates for readability
coord_flip() +
# Labels and themes
labs(title = "Average Total Claims and Number of Claims by Suburb",
x = "Suburb",
y = "Average Total Claims") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
# Display the plot
print(bysuburb_plot)
bysuburb <- mutated_Claims_With_Earned %>%
group_by(nb_suburb) %>%
summarise(average.total.claims.paid = mean(claims_paid)) %>%
arrange(desc(average.total.claims.paid)) %>%
slice_head(n = 20)
mutated_Claims_With_Earned
bysuburb <- mutated_Claims_With_Earned %>%
group_by(nb_suburb) %>%
summarise(average.total.claims.paid = mean(claim_paid)) %>%
arrange(desc(average.total.claims.paid)) %>%
slice_head(n = 20)
bysuburb.bar <- ggplot(bysuburb, aes(x = reorder(nb_suburb, average.total.claims.paid),
y = average.total.claims.paid)) +
geom_bar(stat = "identity", fill = "darkorchid1") +
coord_flip() +
labs(title = "Total Average Claims by Suburb",
x = "Suburb",
y = "Average Total Claims") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
bysuburb.bar
bysuburb.bar
to.remove.claim.amount <- c("nb_postcode", "nb_breed_name_unique", "nb_breed_name_unique_concat", "claim_id", "total_claim_amount", "average_claim_paid", "claim_frequency", "tenure.x", "tenure.y", "claim_status", "earned_units", "exposure_id_1", "exposure_id", "nb_policy_first_inception_date", "quote_date", "claim_start_date", "lead_date_dat")
claims.train <- mutated_Claims_With_Earned[,!(colnames(mutated_Claims_With_Earned) %in% to.remove.claim.amount)]
claims.train <- na.omit(claims.train)
claims.rf <- randomForest(claim_paid ~., data = claims.train, importance = TRUE)
average.total.claim.importance <- varImpPlot(claims.rf) #nb_breed_trait, pet_age_months, condition_category, nb_suburb
to.remove.claim.amount <- c("nb_postcode", "nb_breed_name_unique", "nb_breed_name_unique_concat", "claim_id", "total_claim_amount", "average_claim_paid", "claim_frequency", "tenure.x", "tenure.y", "claim_status", "earned_units", "exposure_id_1", "exposure_id", "nb_policy_first_inception_date", "quote_date", "claim_start_date", "lead_date_date", "average_total_claim_amount")
claims.train <- mutated_Claims_With_Earned[,!(colnames(mutated_Claims_With_Earned) %in% to.remove.claim.amount)]
claims.train <- na.omit(claims.train)
claims.rf <- randomForest(claim_paid ~., data = claims.train, importance = TRUE)
average.total.claim.importance <- varImpPlot(claims.rf) #nb_breed_trait, pet_age_months, condition_category, nb_suburb
to.remove.claim.amount <- c("nb_postcode", "nb_breed_name_unique", "nb_breed_name_unique_concat", "claim_id", "total_claim_amount", "average_claim_paid", "claim_frequency", "tenure.x", "tenure.y", "claim_status", "earned_units", "exposure_id_1", "exposure_id", "nb_policy_first_inception_date", "quote_date", "claim_start_date", "lead_date_day", "average_total_claim_amount")
claims.train <- mutated_Claims_With_Earned[,!(colnames(mutated_Claims_With_Earned) %in% to.remove.claim.amount)]
claims.train <- na.omit(claims.train)
claims.rf <- randomForest(claim_paid ~., data = claims.train, importance = TRUE)
average.total.claim.importance <- varImpPlot(claims.rf) #nb_breed_trait, pet_age_months, condition_category, nb_suburb
to.remove.claim.amount <- c("nb_postcode", "nb_breed_name_unique",
"UW_Date", "nb_breed_name_unique_concat", "claim_id", "total_claim_amount", "average_claim_paid", "claim_frequency", "tenure.x", "tenure.y", "claim_status", "earned_units", "exposure_id_1", "exposure_id", "nb_policy_first_inception_date", "quote_date", "claim_start_date", "lead_date_day", "average_total_claim_amount")
claims.train <- mutated_Claims_With_Earned[,!(colnames(mutated_Claims_With_Earned) %in% to.remove.claim.amount)]
claims.train <- na.omit(claims.train)
claims.rf <- randomForest(claim_paid ~., data = claims.train, importance = TRUE)
to.remove.claim.amount <- c("nb_postcode", "nb_breed_name_unique",
"UW_Date", "nb_breed_name_unique_concat",
"quote_time_group","claim_id", "total_claim_amount", "average_claim_paid", "claim_frequency", "tenure.x", "tenure.y", "claim_status", "earned_units", "exposure_id_1", "exposure_id", "nb_policy_first_inception_date", "quote_date", "claim_start_date", "lead_date_day", "average_total_claim_amount")
claims.train <- mutated_Claims_With_Earned[,!(colnames(mutated_Claims_With_Earned) %in% to.remove.claim.amount)]
claims.train <- na.omit(claims.train)
claims.rf <- randomForest(claim_paid ~., data = claims.train, importance = TRUE)
average.total.claim.importance <- varImpPlot(claims.rf) #nb_breed_trait, pet_age_months, condition_category, nb_suburb
bysuburb.bar
bysuburb.bar <- ggplot(number.of.claims.by.suburb, aes(x = reorder(nb_suburb, number_of_claims),
y = number_of_claims)) +
geom_bar(stat = "identity", fill = "darkorchid1") +
coord_flip() +
labs(title = "Total Average Claims by Suburb",
x = "Suburb",
y = "Average Total Claims") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
bysuburb.bar <- ggplot(number.of.claims.by.suburb, aes(x = reorder(nb_suburb, number_of_claims),
y = number_of_claims)) +
geom_bar(stat = "identity", fill = "darkorchid1") +
coord_flip() +
labs(title = "Total Average Claims by Suburb",
x = "Suburb",
y = "Average Total Claims") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
bysuburb.bar
bysuburb$nb_suburb
bysuburb <- mutated_Claims_With_Earned %>%
group_by(nb_suburb) %>%
summarise(average.total.claims.paid = mean(claim_paid), number_of_claims_paid = n()) %>%
arrange(desc(average.total.claims.paid)) %>%
slice_head(n = 20)
bysuburb.bar <- ggplot(bysuburb, aes(x = reorder(nb_suburb, average.total.claims.paid),
y = average.total.claims.paid)) +
geom_bar(stat = "identity", fill = "darkorchid1") +
coord_flip() +
labs(title = "Total Average Claims by Suburb",
x = "Suburb",
y = "Average Total Claims Paid") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
bysuburb.bar
number.paid.bar <- ggplot(bysuburb, aes(x = reorder(nb_suburb, average.total.claims.paid),
y = number_of_claims_paid)) +
geom_bar(stat = "identity", fill = "darkorchid1") +
coord_flip() +
labs(title = "Total Average Claims by Suburb",
x = "Suburb",
y = "Average Total Claims Paid") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
number.paid.bar <- ggplot(bysuburb, aes(x = reorder(nb_suburb, number_of_claims_paid),
y = number_of_claims_paid)) +
geom_bar(stat = "identity", fill = "darkorchid1") +
coord_flip() +
labs(title = "Total Average Claims by Suburb",
x = "Suburb",
y = "Average Total Claims Paid") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
number.paid.bar
bysuburb
bysuburb.bar
number.of.claims.by.suburb <- ggplot(bysuburb, aes(x = nb_suburb, y = number_of_claims_paid)) +
geom_bar(stat = "identity", fill = "darkorchid1")
number.of.claims.by.suburb
number.of.claims.by.suburb <- ggplot(bysuburb, aes(x = nb_suburb, y = number_of_claims_paid)) +
geom_bar(stat = "identity", fill = "darkorchid1") +
coord_flip() +
labs(title = "Total Average Claims by Suburb",
x = "Suburb",
y = "Average Total Claims Paid") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
number.of.claims.by.suburb
number.of.claims.by.suburb <- ggplot(bysuburb, aes(x = nb_suburb, y = number_of_claims_paid)) +
geom_bar(stat = "identity", fill = "darkcyan") +
coord_flip() +
labs(title = "Total Average Claims by Suburb",
x = "Suburb",
y = "Average Total Claims Paid") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
number.of.claims.by.suburb
bysuburb.bar <- ggplot(bysuburb, aes(x = reorder(nb_suburb, average.total.claims.paid),
y = average.total.claims.paid)) +
geom_bar(stat = "identity", fill = "darkkhaki") +
coord_flip() +
labs(title = "Total Average Claims by Suburb",
x = "Suburb",
y = "Average Total Claims Paid") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
bysuburb.bar
number.of.claims.by.suburb <- ggplot(bysuburb, aes(x = nb_suburb, y = number_of_claims_paid)) +
geom_bar(stat = "identity", fill = "darkcyan") +
coord_flip() +
labs(title = "Number of Claims Paid by Suburb",
x = "Suburb",
y = "Number of Claims Paid") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
number.of.claims.by.suburb <- ggplot(bysuburb, aes(x = nb_suburb, y = number_of_claims_paid)) +
geom_bar(stat = "identity", fill = "darkcyan") +
coord_flip() +
labs(title = "Number of Claims Paid by Suburb",
x = "Suburb",
y = "Number of Claims Paid") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
par(mfrow = c(2,2))
number.of.claims.by.suburb
bysuburb.bar
par(nfrow = c(2,2))
number.of.claims.by.suburb
bysuburb.bar
par(mfrow = c(2,2))
number.of.claims.by.suburb
bysuburb.bar
number.of.claims.by.suburb
bysuburb.bar
bysuburb <- mutated_Claims_With_Earned %>%
group_by(nb_suburb) %>%
summarise(average.total.claims.paid = mean(claim_paid), number_of_claims_paid = n()) %>%
arrange(desc(average.total.claims.paid)) %>%
slice_head(n = 10)
bysuburb.bar <- ggplot(bysuburb, aes(x = reorder(nb_suburb, average.total.claims.paid),
y = average.total.claims.paid)) +
geom_bar(stat = "identity", fill = "darkkhaki") +
coord_flip() +
labs(title = "Total Average Claims by Suburb",
x = "Suburb",
y = "Average Total Claims Paid") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
number.of.claims.by.suburb <- ggplot(bysuburb, aes(x = nb_suburb, y = number_of_claims_paid)) +
geom_bar(stat = "identity", fill = "darkcyan") +
coord_flip() +
labs(title = "Number of Claims Paid by Suburb",
x = "Suburb",
y = "Number of Claims Paid") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
par(mfrow = c(2,2))
number.of.claims.by.suburb
bysuburb.bar
bysuburb.bar <- ggplot(bysuburb, aes(x = reorder(nb_suburb, average.total.claims.paid),
y = average.total.claims.paid)) +
geom_bar(stat = "identity", fill = "darkkhaki") +
coord_flip() +
labs(title = "Total Average Claims Paid by Suburb",
x = "Suburb",
y = "Average Total Claims Paid") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
bysuburb.bar
bysuburb <- mutated_Claims_With_Earned %>%
group_by(nb_suburb) %>%
summarise(average.total.claims = mean(total_claim_amount), number_of_claims_paid = n()) %>%
arrange(desc(average.total.claims.paid)) %>%
slice_head(n = 10)
bysuburb <- mutated_Claims_With_Earned %>%
group_by(nb_suburb) %>%
summarise(average.total.claims = mean(total_claim_amount), number_of_claims_paid = n()) %>%
arrange(desc(average.total.claims)) %>%
slice_head(n = 10)
bysuburb.bar <- ggplot(bysuburb, aes(x = reorder(nb_suburb, average.total.claims),
y = average.total.claims)) +
geom_bar(stat = "identity", fill = "darkkhaki") +
coord_flip() +
labs(title = "Total Average Claims Paid by Suburb",
x = "Suburb",
y = "Expected Claim Severity") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
bysuburb.bar
bysuburb <- mutated_Claims_With_Earned %>%
group_by(nb_suburb) %>%
mutate(count = n())
bysuburb
bysuburb <- mutated_Claims_With_Earned %>%
group_by(nb_suburb) %>%
summarise(average.total.claims = mean(total_claim_amount), number_of_claims = n()) %>%
filter(number_of_claims >= 4)
arrange(desc(average.total.claims)) %>%
slice_head(n = 10)
bysuburb <- mutated_Claims_With_Earned %>%
group_by(nb_suburb) %>%
summarise(average.total.claims = mean(total_claim_amount), number_of_claims = n()) %>%
filter(number_of_claims >= 4)
arrange(desc(average.total.claims)) %>%
slice_head(n = 10)
bysuburb
bysuburb <- mutated_Claims_With_Earned %>%
group_by(nb_suburb) %>%
summarise(average.total.claims = mean(total_claim_amount), number_of_claims = n()) %>%
filter(number_of_claims >= 4)
arrange(desc(average.total.claims)) %>%
slice_head(n = 10)
bysuburb <- mutated_Claims_With_Earned %>%
group_by(nb_suburb) %>%
summarise(average.total.claims = mean(total_claim_amount), number_of_claims = n()) %>%
filter(number_of_claims >= 4)
bysuburb
bysuburb <- bysuburb %>%
arrange(desc(average.total.claims)) %>%
slice_head(n = 10)
bysuburb
bysuburb.bar <- ggplot(bysuburb, aes(x = reorder(nb_suburb, average.total.claims),
y = average.total.claims)) +
geom_bar(stat = "identity", fill = "darkkhaki") +
coord_flip() +
labs(title = "Total Average Claims Paid by Suburb",
x = "Suburb",
y = "Expected Claim Severity") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
bysuburb.bar
bysuburb.bar <- ggplot(bysuburb, aes(x = reorder(nb_suburb, average.total.claims),
y = average.total.claims)) +
geom_bar(stat = "identity", fill = "darkkhaki") +
coord_flip() +
labs(title = "Average Total Claims by Suburb",
x = "Suburb",
y = "Expected Claim Severity") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
number.of.claims.by.suburb <- ggplot(bysuburb, aes(x = nb_suburb, y = number_of_claims)) +
geom_bar(stat = "identity", fill = "darkcyan") +
coord_flip() +
labs(title = "Number of Claims Paid by Suburb",
x = "Suburb",
y = "Number of Claims Paid") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
number.of.claims.by.suburb <- ggplot(bysuburb, aes(x = nb_suburb, y = number_of_claims)) +
geom_bar(stat = "identity", fill = "darkcyan") +
coord_flip() +
labs(title = "Number of Claims by Suburb",
x = "Suburb",
y = "Number of Claims") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
number.of.claims.by.suburb
bysuburb <- mutated_Claims_With_Earned %>%
group_by(nb_suburb) %>%
summarise(average.total.claims = mean(total_claim_amount), number_of_claims = n()) %>%
filter(number_of_claims >= 3)
bysuburb <- bysuburb %>%
arrange(desc(average.total.claims)) %>%
slice_head(n = 10)
bysuburb.bar <- ggplot(bysuburb, aes(x = reorder(nb_suburb, average.total.claims),
y = average.total.claims)) +
geom_bar(stat = "identity", fill = "darkkhaki") +
coord_flip() +
labs(title = "Average Total Claims by Suburb",
x = "Suburb",
y = "Expected Claim Severity") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
bysuburb.bar
number.of.claims.by.suburb <- ggplot(bysuburb, aes(x = nb_suburb, y = number_of_claims)) +
geom_bar(stat = "identity", fill = "darkcyan") +
coord_flip() +
labs(title = "Number of Claims by Suburb",
x = "Suburb",
y = "Number of Claims") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
number.of.claims.by.suburb
claims.train
mutated_Claims_With_Earned <- Claims_With_Earned %>%
left_join(Claim.Frequency, by = "exposure_id")
to.remove.claim.amount <- c("nb_postcode", "nb_breed_name_unique",
"UW_Date", "nb_breed_name_unique_concat",
"quote_time_group","claim_id", "total_claim_amount",
"average_claim_paid", "claim_frequency", "tenure.x",
"tenure.y", "claim_status", "earned_units", "exposure_id_1",
"exposure_id", "nb_policy_first_inception_date", "quote_date",
"claim_start_date", "lead_date_day", )
mutated_Claims_With_Earned
Claim.Frequency <- Claims_With_Earned %>%
group_by(exposure_id) %>%
summarise(claim_frequency = n(), average_total_claim_amount = mean(total_claim_amount), average_claim_paid = mean(claim_paid))
mutated_Claims_With_Earned <- Claims_With_Earned %>%
left_join(Claim.Frequency, by = "exposure_id")
to.remove.claim.amount <- c("nb_postcode", "nb_breed_name_unique",
"UW_Date", "nb_breed_name_unique_concat",
"quote_time_group","claim_id", "total_claim_amount",
"average_claim_paid", "claim_frequency", "tenure.x",
"tenure.y", "claim_status", "earned_units", "exposure_id_1",
"exposure_id", "nb_policy_first_inception_date", "quote_date",
"claim_start_date", "lead_date_day", )
claims.train
to.remove.claim.amount <- c("nb_postcode", "nb_breed_name_unique",
"UW_Date", "nb_breed_name_unique_concat",
"quote_time_group","claim_id", "total_claim_amount",
"average_claim_paid", "claim_frequency", "tenure.x",
"tenure.y", "claim_status", "earned_units", "exposure_id_1",
"exposure_id", "nb_policy_first_inception_date", "quote_date",
"claim_start_date", "lead_date_day")
claims.train <- mutated_Claims_With_Earned[,!(colnames(mutated_Claims_With_Earned) %in% to.remove.claim.amount)]
claims.train <- na.omit(claims.train)
claims.rf <- randomForest(average_total_claim_amount ~., data = claims.train, importance = TRUE)
average.total.claim.importance <- varImpPlot(claims.rf) #nb_breed_trait, pet_age_months, condition_category, nb_suburb
to.remove.claim.amount <- c("nb_postcode", "nb_breed_name_unique",
"UW_Date", "nb_breed_name_unique_concat",
"quote_time_group","claim_id", "total_claim_amount",
"average_claim_paid", "claim_frequency", "tenure.x",
"tenure.y", "claim_status", "earned_units", "exposure_id_1",
"exposure_id", "nb_policy_first_inception_date", "quote_date",
"claim_start_date", "lead_date_day", "claim_paid")
claims.train <- mutated_Claims_With_Earned[,!(colnames(mutated_Claims_With_Earned) %in% to.remove.claim.amount)]
claims.train <- na.omit(claims.train)
claims.rf <- randomForest(average_total_claim_amount ~., data = claims.train, importance = TRUE)
average.total.claim.importance <- varImpPlot(claims.rf) #nb_breed_trait, pet_age_months, condition_category, nb_suburb
bysuburb.bar
bysuburb.bar <- ggplot(bysuburb, aes(x = reorder(nb_suburb, average.total.claims),
y = average.total.claims)) +
geom_bar(stat = "identity", fill = "darkkhaki") +
coord_flip() +
labs(title = "Average Total Claims by Suburb",
x = "Suburb",
y = "Expected Claim Amount") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
bysuburb.bar

breaks = seq(0, max(combined_data$age_breed_interaction, na.rm = TRUE) + 10, by = 10),
include.lowest = TRUE,
right = FALSE)
# Visualizing the relationship between binned Age * Breed Size and frequency
ggplot(combined_data, aes(x = age_breed_bin, y = claim_freq)) +
geom_bar(stat = "identity") +
labs(title = "Binned Age-Breed Interaction vs. Frequency",
x = "Binned Age * Breed Size (Every 20)",
y = "Frequency") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for clarity
combined_data$log_age_breed_interaction <- log1p(combined_data$age_breed_interaction)  # log1p handles zero values safely
combined_data$age_breed_bin <- cut(combined_data$log_age_breed_interaction,
breaks = seq(0, max(combined_data$log_age_breed_interaction, na.rm = TRUE) + 10, by = 10),
include.lowest = TRUE,
right = FALSE)
# Visualizing the relationship between binned Age * Breed Size and frequency
ggplot(combined_data, aes(x = age_breed_bin, y = claim_freq)) +
geom_bar(stat = "identity") +
labs(title = "Binned Age-Breed Interaction vs. Frequency",
x = "Binned Age * Breed Size (Every 20)",
y = "Frequency") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for clarity
combined_data$log_age_breed_interaction <- log1p(combined_data$age_breed_interaction)  # log1p handles zero values safely
combined_data$age_breed_bin <- cut(combined_data$log_age_breed_interaction,
breaks = seq(0, max(combined_data$log_age_breed_interaction, na.rm = TRUE) + 1, by = 1),
include.lowest = TRUE,
right = FALSE)
# Visualizing the relationship between binned Age * Breed Size and frequency
ggplot(combined_data, aes(x = age_breed_bin, y = claim_freq)) +
geom_bar(stat = "identity") +
labs(title = "Binned Age-Breed Interaction vs. Frequency",
x = "Binned Age * Breed Size (Every 20)",
y = "Frequency") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for clarity
combined_data$age_breed_bin %>% summary
combined_data$age_breed_bin
combined_data$log_age_breed_interaction
combined_data$age_breed_bin <- as.numeric(cut(combined_data$log_age_breed_interaction,
breaks = seq(0, max(combined_data$log_age_breed_interaction, na.rm = TRUE) + 1, by = 1),
include.lowest = TRUE,
right = FALSE))
combined_data$log_age_breed_interaction <- log1p(combined_data$age_breed_interaction)  # log1p handles zero values safely
combined_data$age_breed_bin <- as.numeric(cut(combined_data$log_age_breed_interaction,
breaks = seq(0, max(combined_data$log_age_breed_interaction, na.rm = TRUE) + 1, by = 1),
include.lowest = TRUE,
right = FALSE))
ggplot(combined_data, aes(x = age_breed_bin, y = claim_freq)) +
geom_bar(stat = "identity") +
labs(title = "Binned Age-Breed Interaction vs. Claim Frequency Frequency",
x = "Binned Age * Breed Size (Every 20)",
y = "Frequency") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for clarity
combined_data$age_breed_bin
features <- c(
'pet_is_male',
'pet_age_months',
'nb_contribution',
'nb_excess',
'nb_address_type_adj_numerical',
'nb_state_num',
'nb_contribution_excess',
'owner_age_years',
'nb_number_of_breeds',
'nb_average_breed_size',
'nb_breed_type_num',
'nb_breed_trait_num',
'is_multi_pet_plan_num',
'quote_time_group_num',
'claim_nb',
'earned_units',
'owner_pet_age_interaction',
'contribution_excess_interaction',
'age_breed_bin'
)
x <- as.matrix(combined_data[, features])
# Define the target variable
y <- combined_data$claim_freq
# Fit the Lasso model
lasso_model <- cv.glmnet(x, y, alpha = 1)
# Get the coefficients of the model at the optimal lambda (lambda.min)
coef_lasso <- coef(lasso_model, s = "lambda.min")
# Extract the names of selected features (those with non-zero coefficients)
selected_features <- rownames(coef_lasso)[which(coef_lasso != 0)]
selected_features
# Check severity
# Step 1: Calculate the average claim cost for each age_breed_bin
combined_data_avg <- combined_data %>%
group_by(age_breed_bin) %>%
summarise(avg_claim_cost = mean(claim_cost, na.rm = TRUE))
combined_data_avg <- combined_data %>%
group_by(age_breed_bin) %>%
summarise(avg_claim_cost = mean(claim_cost, na.rm = TRUE))
ggplot(combined_data_avg, aes(x = age_breed_bin, y = avg_claim_cost)) +
geom_bar(stat = "identity") +
labs(title = "Binned Age-Breed Interaction vs. Average Claim Cost",
x = "Binned Age * Breed Size",
y = "Average Claim Cost") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for clarity
combined_data_avg <- combined_data %>%
group_by(age_breed_bin) %>%
summarise(avg_claim_cost = mean(claim_cost, na.rm = TRUE))
# Step 1: Calculate the average claim cost for each age_breed_bin
combined_data_avg <- combined_data %>%
group_by(age_breed_bin) %>%
summarise(avg_claim_cost = mean(Total_claim_amount, na.rm = TRUE))
# Step 2: Visualize the relationship between binned Age * Breed Size and average claim cost
ggplot(combined_data_avg, aes(x = age_breed_bin, y = avg_claim_cost)) +
geom_bar(stat = "identity") +
labs(title = "Binned Age-Breed Interaction vs. Average Claim Cost",
x = "Binned Age * Breed Size",
y = "Average Claim Cost") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for clarity
install.packages("xgboost")
install.packages("Matrix")  # Required for sparse matrix
install.packages("caret")   # For splitting data and evaluation
install.packages("Matrix")
install.packages("Matrix")
install.packages("Matrix")
install.packages("Matrix")
install.packages("Matrix")
library(xgboost)
library(Matrix)
library(caret)
library(Matrix)
library(caret)
# Fit a GLM model on your data
combined_data$claim_nb %>% summary
library(dplyr)
# Fit a GLM model on your data
combined_data$claim_nb %>% summary
# Create predicting columns
combined_data$severity <- combined_data$Total_claim_amount / combined_data$claim_nb
combined_data$severity
View(combined_data)
combined_data$frequency <- combined_data$claim_freq
source("C:/Users/samyu/code/actl4305/3.Model_Building.R", echo=TRUE)
# Features
features <- c(
'pet_is_male',
'pet_age_months',
'nb_contribution',
'nb_excess',
'nb_address_type_adj_numerical',
'nb_state_num',
'nb_contribution_excess',
'owner_age_years',
'nb_number_of_breeds',
'nb_average_breed_size',
'nb_breed_type_num',
'nb_breed_trait_num',
'is_multi_pet_plan_num',
'quote_time_group_num',
'claim_nb',
'earned_units',
'owner_pet_age_interaction',
'contribution_excess_interaction',
'age_breed_bin'
)
# Join the features to form a formula with underscores between feature names
formula <- as.formula(paste(target, "~", paste(features, collapse = "_ + "), sep = ""))
# Join the features to form a formula with underscores between feature names
formula <- as.formula(paste("severity", "~", paste(features, collapse = "_ + "), sep = ""))
formula
# Fit the GLM model
glm_model <- glm(formula, data = combined_data, family = gaussian())
# ==============================================================================
# Feature engineering
# Numerical variable conversion
combined_data$pet_is_male <- ifelse(combined_data$pet_gender == 'male', 1, 0)
# Convert complex type into numerical encoding
combined_data$nb_address_type_adj <- as.factor(combined_data$nb_address_type_adj)
combined_data$nb_address_type_adj_numerical <- as.numeric(combined_data$nb_address_type_adj)
# Convert state
combined_data$nb_state <- as.factor(combined_data$nb_state)
combined_data$nb_state_num <- as.numeric(combined_data$nb_state)
# Convert breed type
combined_data$nb_breed_type <- as.factor(combined_data$nb_breed_type)
combined_data$nb_breed_type_num <- as.numeric(combined_data$nb_breed_type)
# Convert breed trait
combined_data$nb_breed_trait <- as.factor(combined_data$nb_breed_trait)
combined_data$nb_breed_trait_num <- as.numeric(combined_data$nb_breed_trait)
# Multi-pet plan
combined_data$is_multi_pet_plan <- as.factor(combined_data$is_multi_pet_plan)
combined_data$is_multi_pet_plan_num <- as.numeric(combined_data$is_multi_pet_plan)
# Quote average time
combined_data$quote_time_group <- as.factor(combined_data$quote_time_group)
combined_data$quote_time_group_num <- as.numeric(combined_data$quote_time_group)
# Breed interactions
combined_data$age_breed_interaction <- combined_data$pet_age_months * combined_data$nb_average_breed_size
# ==============================================================================
# Special Feature creation
# 1. Create an owner's age group, and also a pet's age grouyp and look to feature engineer something out of that
# Currently the age is a bit scattered shown in the plot below
# Assuming your data frame is called 'data' and has columns 'age' and 'frequency'\
# Age bucket * breed size
# Scatter plot for age_breed_interaction vs frequency
combined_data$log_age_breed_interaction <- log1p(combined_data$age_breed_interaction)  # log1p handles zero values safely
combined_data$age_breed_bin <- as.numeric(cut(combined_data$log_age_breed_interaction,
breaks = seq(0, max(combined_data$log_age_breed_interaction, na.rm = TRUE) + 1, by = 1),
include.lowest = TRUE,
right = FALSE))
# Join the features to form a formula with underscores between feature names
formula <- as.formula(paste("severity", "~", paste(features, collapse = "_ + "), sep = ""))
# Fit the GLM model
glm_model <- glm(formula, data = combined_data, family = gaussian())
formula
# Join the features to form a formula with underscores between feature names
formula <- as.formula(paste("severity", "~", paste(features, collapse = " + "), sep = ""))
formula
# Fit the GLM model
glm_model <- glm(formula, data = combined_data, family = gaussian())
glm_model
# Summary of the GLM model to see the coefficients and model fit
summary(glm_model)
combined_data$pet_is_male
# Features
features <- c(
'pet_age_months',
'nb_contribution',
'nb_excess',
'nb_address_type_adj_numerical',
'nb_state_num',
'nb_contribution_excess',
'owner_age_years',
'nb_number_of_breeds',
'nb_average_breed_size',
'nb_breed_type_num',
'nb_breed_trait_num',
'is_multi_pet_plan_num',
'quote_time_group_num',
'claim_nb',
'earned_units',
'owner_pet_age_interaction',
'contribution_excess_interaction',
'age_breed_bin'
)
# Join the features to form a formula with underscores between feature names
formula <- as.formula(paste("severity", "~", paste(features, collapse = " + "), sep = ""))
# Fit the GLM model
glm_model <- glm(formula, data = combined_data, family = gaussian())
# Summary of the GLM model to see the coefficients and model fit
summary(glm_model)
deviance(glm_model)
glm_model$null.deviance
pseudo_r_squared <- 1 - (glm_model$deviance / glm_model$null.deviance)
pseudo_r_squared
AIC(glm_model)
features <- c(
'nb_state_num',
'nb_contribution_excess',
'claim_nb',
'age_breed_bin'
)
# Join the features to form a formula with underscores between feature names
formula <- as.formula(paste("severity", "~", paste(features, collapse = " + "), sep = ""))
# Fit the GLM model
glm_model <- glm(formula, data = combined_data, family = gaussian())
# Summary of the GLM model to see the coefficients and model fit
summary(glm_model)
# Deviance and Null Deviance
deviance(glm_model)
glm_model$null.deviance
pseudo_r_squared <- 1 - (glm_model$deviance / glm_model$null.deviance)
pseudo_r_squared
AIC(glm_model)
library(lubridate)
# Person's age
combined_data$owners_age <- as.numeric(floor(interval(as.Date(combined_data$person_dob), Sys.Date()) / years(1)))
combined_data$owners_age
features <- c(
'nb_state_num',
'nb_contribution_excess',
'claim_nb',
'age_breed_bin',
'owners_age'
)
# Join the features to form a formula with underscores between feature names
formula <- as.formula(paste("severity", "~", paste(features, collapse = " + "), sep = ""))
# Fit the GLM model
glm_model <- glm(formula, data = combined_data, family = gaussian())
# Summary of the GLM model to see the coefficients and model fit
summary(glm_model)
# Plot 2: Total Severity by Owner Age (Total Claim Amount)
plot2 <- ggplot(age_stats, aes(x = owner_age_years, y = total_claim_amount)) +
geom_bar(stat = "identity", fill = "orange", color = "black", alpha = 0.7) +
labs(title = "Total Severity of Claims by Owner Age",
x = "Owner Age (Years)",
y = "Total Claim Amount") +
theme_minimal() +
scale_y_continuous(labels = label_number())
age_stats <- Claims_With_Earned %>%
group_by(owner_age_years) %>%
summarise(claim_frequency = n(), # Number of claims (frequency)
total_claim_amount = sum(claim_paid, na.rm = TRUE), # Total claim amount (severity)
avg_claim_amount = mean(claim_paid, na.rm = TRUE)) # Average claim amount (severity)
library("dplyr")
library("scales")
library("gapminder")
library("ggpubr")
data <- UNSW_earned_data_adjusted_Sep27
library(readr)
UNSW_earned_data_adjusted_Sep27 <- read_csv("UNSW_earned_data_adjusted_Sep27.csv")
View(UNSW_earned_data_adjusted_Sep27)
data <- UNSW_earned_data_adjusted_Sep27
aggr_data  <- left_join(data, UNSW_claims_data, by = c("exposure_id", "tenure"))
# Data cleaningL
Claims_With_Earned <- Claims_With_Earned %>%
mutate(age_group = cut(pet_age_months,
breaks = seq(0, max(pet_age_months, na.rm = TRUE), by = 12),
include.lowest = TRUE,
right = FALSE,
labels = paste(seq(0, max(pet_age_months, na.rm = TRUE) - 12, by = 12),
seq(12, max(pet_age_months, na.rm = TRUE), by = 12),
sep = "-")))
ggplot(combined_data, aes(x = owners_age, y = severity)) +
geom_point() +  # Use points to visualize individual data points
geom_smooth(method = "lm", se = FALSE, color = "blue") +  # Optionally add a regression line
labs(title = "Owner's Age vs Severity",
x = "Owner's Age (Years)",
y = "Severity") +
theme_minimal()
ggplot(combined_data_avg, aes(x = owner_age_years, y = avg_severity)) +
geom_bar(stat = "identity", fill = "skyblue") +  # Bar chart
labs(title = "Average Severity by Owner's Age",
x = "Owner's Age (Years)",
y = "Average Severity") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for readability
ggplot(combined_data_avg, aes(x = owners_age, y = avg_severity)) +
geom_bar(stat = "identity", fill = "skyblue") +  # Bar chart
labs(title = "Average Severity by Owner's Age",
x = "Owner's Age (Years)",
y = "Average Severity") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for readability
ggplot(combined_data, aes(x = owners_age, y = avg_severity)) +
geom_bar(stat = "identity", fill = "skyblue") +  # Bar chart
labs(title = "Average Severity by Owner's Age",
x = "Owner's Age (Years)",
y = "Average Severity") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for readability
ggplot(combined_data, aes(x = owners_age, y = avg_severity)) +
geom_bar(stat = "identity", fill = "skyblue") +  # Bar chart
labs(title = "Average Severity by Owner's Age",
x = "Owner's Age (Years)",
y = "Average Severity") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(combined_data, aes(x = owners_age, y = severity)) +
geom_bar(stat = "identity", fill = "skyblue") +  # Bar chart
labs(title = "Average Severity by Owner's Age",
x = "Owner's Age (Years)",
y = "Average Severity") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Person's age
combined_data$owners_age <- log1p(as.numeric(floor(interval(as.Date(combined_data$person_dob), Sys.Date()) / years(1))))
ggplot(combined_data, aes(x = owners_age, y = severity)) +
geom_bar(stat = "identity", fill = "skyblue") +  # Bar chart
labs(title = "Average Severity by Owner's Age",
x = "Owner's Age (Years)",
y = "Average Severity") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Person's age
combined_data$owners_age <- (as.numeric(floor(interval(as.Date(combined_data$person_dob), Sys.Date()) / years(1))))
combined_data$age_bucket <- cut(combined_data$owner_age_years,
breaks = c(0, 20, 40, 60, 80, Inf),  # Define the age intervals
labels = c(1, 2, 3, 4, 5),  # Assign numerical labels for each bucket
right = FALSE)  # Include lower bound, exclude upper bound
combined_data$age_bucket
ggplot(combined_data, aes(x = age_bucket, y = severity)) +
geom_bar(stat = "identity", fill = "skyblue") +  # Bar chart
labs(title = "Average Severity by Owner's Age",
x = "Owner's Age (Years)",
y = "Average Severity") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Person's age
combined_data$owners_age <- (as.numeric(floor(interval(as.Date(combined_data$person_dob), Sys.Date()) / years(1))))
# Bucketing owner's age into 4 groups and labeling them with numerical values
combined_data$age_bucket <- cut(combined_data$owner_age_years,
breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, Inf),  # Define the age intervals
labels = c(1, 2, 3, 4, 5),  # Assign numerical labels for each bucket
right = FALSE)  # Include lower bound, exclude upper bound
combined_data$owners_age <- (as.numeric(floor(interval(as.Date(combined_data$person_dob), Sys.Date()) / years(1))))
# Bucketing owner's age into 4 groups and labeling them with numerical values
combined_data$age_bucket <- cut(combined_data$owner_age_years,
breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, Inf),  # Define the age intervals
labels = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),  # Assign numerical labels for each bucket
right = FALSE)  # Include lower bound, exclude upper bound
# Person's age
combined_data$owners_age <- (as.numeric(floor(interval(as.Date(combined_data$person_dob), Sys.Date()) / years(1))))
# Bucketing owner's age into 4 groups and labeling them with numerical values
combined_data$age_bucket <- cut(combined_data$owner_age_years,
breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, Inf),  # Define the age intervals
labels = c(1, 2, 3, 4, 5, 6, 7, 8, 9),  # Assign numerical labels for each bucket
right = FALSE)  # Include lower bound, exclude upper bound
ggplot(combined_data, aes(x = age_bucket, y = severity)) +
geom_bar(stat = "identity", fill = "skyblue") +  # Bar chart
labs(title = "Average Severity by Owner's Age",
x = "Owner's Age (Years)",
y = "Average Severity") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Person's age
combined_data$owners_age <- log1p(as.numeric(floor(interval(as.Date(combined_data$person_dob), Sys.Date()) / years(1))))
# Bucketing owner's age into 4 groups and labeling them with numerical values
combined_data$age_bucket <- cut(combined_data$owner_age_years,
breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, Inf),  # Define the age intervals
labels = c(1, 2, 3, 4, 5, 6, 7, 8, 9),  # Assign numerical labels for each bucket
right = FALSE)  # Include lower bound, exclude upper bound
ggplot(combined_data, aes(x = age_bucket, y = severity)) +
geom_bar(stat = "identity", fill = "skyblue") +  # Bar chart
labs(title = "Average Severity by Owner's Age",
x = "Owner's Age (Years)",
y = "Average Severity") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Person's age
combined_data$owners_age <- log1p(as.numeric(floor(interval(as.Date(combined_data$person_dob), Sys.Date()) / years(1))))
# Bucketing owner's age into 4 groups and labeling them with numerical values
combined_data$age_bucket <- cut(combined_data$owners_age,
breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, Inf),  # Define the age intervals
labels = c(1, 2, 3, 4, 5, 6, 7, 8, 9),  # Assign numerical labels for each bucket
right = FALSE)  # Include lower bound, exclude upper bound
ggplot(combined_data, aes(x = age_bucket, y = severity)) +
geom_bar(stat = "identity", fill = "skyblue") +  # Bar chart
labs(title = "Average Severity by Owner's Age",
x = "Owner's Age (Years)",
y = "Average Severity") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
combined_data$age_bucket
combined_data$owners_age
# Person's age
combined_data$owners_age <- (as.numeric(floor(interval(as.Date(combined_data$person_dob), Sys.Date()) / years(1))))
# Bucketing owner's age into 4 groups and labeling them with numerical values
combined_data$age_bucket <- cut(combined_data$owners_age,
breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, Inf),  # Define the age intervals
labels = c(1, 2, 3, 4, 5, 6, 7, 8, 9),  # Assign numerical labels for each bucket
right = FALSE)  # Include lower bound, exclude upper bound
ggplot(combined_data, aes(x = age_bucket, y = severity)) +
geom_bar(stat = "identity", fill = "skyblue") +  # Bar chart
labs(title = "Average Severity by Owner's Age",
x = "Owner's Age (Years)",
y = "Average Severity") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Bucketing owner's age into 4 groups and labeling them with numerical values
combined_data$age_bucket <- cut(combined_data$owners_age,
breaks = c(0, 15, 30, 45, 60, 75, 90, Inf),  # Define the age intervals
labels = c(1, 2, 3, 4, 5, 6, 7),  # Assign numerical labels for each bucket
right = FALSE)  # Include lower bound, exclude upper bound
ggplot(combined_data, aes(x = age_bucket, y = severity)) +
geom_bar(stat = "identity", fill = "skyblue") +  # Bar chart
labs(title = "Average Severity by Owner's Age",
x = "Owner's Age (Years)",
y = "Average Severity") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Bucketing owner's age into 4 groups and labeling them with numerical values
combined_data$age_bucket <- cut(combined_data$owners_age,
breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, Inf),  # Define the age intervals
labels = c(1, 2, 3, 4, 5, 6, 7, 8, 9),  # Assign numerical labels for each bucket
right = FALSE)  # Include lower bound, exclude upper bound
ggplot(combined_data, aes(x = age_bucket, y = severity)) +
geom_bar(stat = "identity", fill = "skyblue") +  # Bar chart
labs(title = "Average Severity by Owner's Age",
x = "Owner's Age (Years)",
y = "Average Severity") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
combined_data$age_bucket <- cut(combined_data$owners_age,
breaks = c(0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, Inf),  # Define the age intervals
labels = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18),  # Assign numerical labels for each bucket
right = FALSE)  # Include lower bound, exclude upper bound
# Bucketing owner's age into 4 groups and labeling them with numerical values
combined_data$age_bucket <- cut(combined_data$owners_age,
breaks = c(0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, Inf),  # Define the age intervals
labels = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19),  # Assign numerical labels for each bucket
right = FALSE)  # Include lower bound, exclude upper bound
ggplot(combined_data, aes(x = age_bucket, y = severity)) +
geom_bar(stat = "identity", fill = "skyblue") +  # Bar chart
labs(title = "Average Severity by Owner's Age",
x = "Owner's Age (Years)",
y = "Average Severity") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
combined_data$age_bucket <- pmin(pmax(combined_data$age_bucket, 5), 14)
features <- c(
'nb_state_num',
'nb_contribution_excess',
'claim_nb',
'age_breed_bin',
'owners_age',
'age_bucket'
)
# Join the features to form a formula with underscores between feature names
formula <- as.formula(paste("severity", "~", paste(features, collapse = " + "), sep = ""))
# Fit the GLM model
glm_model <- glm(formula, data = combined_data, family = gaussian())
# Summary of the GLM model to see the coefficients and model fit
summary(glm_model)
>>>>>>> 88f156aec0125dc1b4abe94307a6c8775f9c6728
